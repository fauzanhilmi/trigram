{"name":"You just lost                         The Game","tagline":"","body":"## Fuzzy String Search dengan Metode Trigram\r\n\r\n*String* adalah struktur data penting yang sering digunakan dalam dunia komputer. Satu operasi yang umum dilakukan terhadap string adalah *string searching* atau *string matching*.  Operasi *string searching* berguna untuk mencocokkan satu string dengan string lainnya. Fitur *find word* yang terdapat di aplikasi-aplikasi berbasis teks menggunakan operasi ini.\r\n\r\nAlgoritma *string searching* standar yang sering dipakai pada *word finder* hanya mampu memberitahu apakah satu *string* sama atau tidak sama dengan satu *string* lainnya. Algoritma ini tidak bisa dipakai untuk mengimplementasikan fitur *word suggestion*. Fitur *word suggestion* berfungsi untuk memberikan saran *string* yang benar jika *string* masukan salah. Fitur ini terdapat pada *spell checker* di *text editor* dan pada *Did you mean..* di Google. Lalu algoritma apakah yang harus dipakai? Jawabannya adalah *approximate string search* atau biasa disebut *fuzzy string search*. Algoritma *fuzzy search* mampu memberikan perbandingan dua *string* secara probabilistik. Hal ini berbeda dari algoritma *search* standar yang menghasilkan perbandingan secara eksak.\r\n\r\nTerdapat banyak macam algoritma *fuzzy string search*.  Salah satunya adalah *n-gram search*. Istilah *n-gram* disini bermakna *sub-string* dengan panjang *n* dari sebuah *string* tertentu. Namun, *n-gram* juga dapat diartikan sebagai *string* dengan panjang *n* dari sebuah kumpulan *string* (kalimat) tertentu. *n-gram* dengan *n* = 1 disebut unigram, *n* = 2 disebut digram, dan *n* = 3 disebut trigram. Untuk *n* > 3 biasanya cukup disebut angkanya saja seperti *4-gram*, *5-gram*, dst. Dari bermacam-macam ukuran *n*, satu *n-gram* yang populer adalah trigram. Hal ini dikarenakan menurut beberapa pakar, nilai *n* = 3 adalah yang paling ideal. Hal ini mengakibatkan trigram sering digunakan di beberapa bidang komputer seperti pada *Natural Language Processing (NLP)* dan analisis frekuensi kriptanalisis.\r\n\r\nKembali ke *fuzzy string search*, kali ini khusus dengan metode trigram. Secara umum, proses *searching* dibagi menjadi dua tahap, yakni *indexing* dan *searching*. Pada tahap *indexing*, kumpulan *string* yang menjadi lingkup pencarian dibagi-bagi menjadi trigram-trigram. Setiap trigram menjadi *index* untuk semua string yang mengandung trigram tersebut. Lalu, proses *searching* sendiri membagi *string* yang menjadi *query* menjadi trigram-trigram juga. Kemudian dicari *string* dari lingkup pencarian yang paling sering mengandung trigram-trigram tersebut. *String* itulah yang menjadi hasil *word suggestion*.\r\n\r\nUntuk mempermudah penjelasan, perhatikan contoh berikut. Misalkan terdapat sebuah fitur *word suggestion* dalam sebuah *spell checker* berbasis bahasa Inggris . Hal ini berarti lingkup pencarian fitur tersebut adalah seluruh kata (*string*) yang terdapat pada kamus bahasa Inggris. Kemudian, dilakukanlah proses *indexing* untuk seluruh kata. Contohnya adalah kata *elephant* berikut.\r\n\r\n(**pic**)\r\n![cannot load picture](http://hsto.org/storage2/239/d06/6bf/239d066bfe2638abf06762b91b069644.png)\r\n\r\nDapat dilihat bahwa setiap trigram yang muncul pada *elephant* menjadi index untuk kata-kata lainnya yang mengandung trigram itu juga. Sekarang, misal dilakukan *query* kata *elephang*. Algoritma akan memecah *elephang* menjadi trigram-trigramnya (*ele*, *lep*, *eph*, *pha*, *han*, dan *ang*). Ternyata, kata *elephant* paling sering muncul dalam *list of words* dari trigram-trigram tersebut. Maka, diputuskanlah bahwa *elephant* adalah *word suggestion* yang diberikan. \r\n\r\nDemikianlah artikel singkat mengenai *fuzzy string search* dengan metode trigram ini. Semoga artikel ini dapat bermanfaat bagi kita semua.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}